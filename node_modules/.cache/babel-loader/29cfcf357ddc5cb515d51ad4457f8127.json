{"ast":null,"code":"var _jsxFileName = \"D:\\\\react new\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n    _s = $RefreshSig$();\n\nimport NoteContext from \"./noteContext\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\"; // const s1 ={\n  //     \"name\": \"Harry\",\n  //     \"class\" : \"5b\"\n  // }\n  // const [state, setState] = useState(s1);\n  // const update =()=>{\n  //      setTimeout(() => {\n  //         setState({\n  //             \"name\":\"Larry\",\n  //             \"class\":\"10b\"\n  //         })\n  //     }, 1000);\n  // }\n  // title: \"Thunder Client\",\n  // body: \"Good Extesion\",\n  // userId: 1,\n\n  const notesintial = [{\n    \"id\": \"6132498465161\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 0\n  }, {\n    \"id\": \"6132498465162\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 1\n  }, {\n    \"id\": \"6132498465163\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 0\n  }, {\n    \"id\": \"6132498465164\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 1\n  }, {\n    \"id\": \"6132498465165\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 0\n  }, {\n    \"id\": \"6132498465166\",\n    \"user\": \"6844dv543551\",\n    \"title\": \"My Title \",\n    \"description\": \"Please Wake up\",\n    \"tag\": \"personal\",\n    \"date\": \"2021-09-0314\",\n    \"__v\": 1\n  }];\n  const [notes, setNotes] = useState(notesintial);\n\n  const addNote = (title, description, tag) => {\n    console.log(\"Adding a new note\");\n    const note = {\n      \"id\": \"61324984651661\",\n      \"user\": \"6844dv5435511\",\n      \"title\": \"My Title Edit\",\n      \"description\": \"Please Wake up Edit\",\n      \"tag\": \"personal\",\n      \"date\": \"2021-09-0314\",\n      \"__v\": 1\n    };\n    setNotes(notes.concat(note));\n  };\n\n  const deleteNote = id => {\n    console.log(\"Deleting the note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note.id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  const editNote = async (tag, description, title, id) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const json = response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n\n      if (element.id === id) {\n        element.tag = tag;\n        element.description = description;\n        element.title = title;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteState, \"UIjzxl8VeORE+RHzRDMbQiNwECw=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["D:/react new/inotebook/src/context/notes/NoteState.js"],"names":["NoteContext","React","useState","NoteState","props","host","notesintial","notes","setNotes","addNote","title","description","tag","console","log","note","concat","deleteNote","id","newNotes","filter","editNote","response","fetch","method","headers","body","JSON","stringify","data","json","index","length","element","children"],"mappings":"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","sourcesContent":["import NoteContext from \"./noteContext\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst NoteState = (props) => {\r\n  const host =\"http://localhost:5000\"\r\n  // const s1 ={\r\n  //     \"name\": \"Harry\",\r\n  //     \"class\" : \"5b\"\r\n  // }\r\n  // const [state, setState] = useState(s1);\r\n  // const update =()=>{\r\n  //      setTimeout(() => {\r\n  //         setState({\r\n  //             \"name\":\"Larry\",\r\n  //             \"class\":\"10b\"\r\n  //         })\r\n  //     }, 1000);\r\n  // }\r\n  // title: \"Thunder Client\",\r\n  // body: \"Good Extesion\",\r\n  // userId: 1,\r\n  const notesintial = [\r\n    {\r\n      \"id\": \"6132498465161\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 0\r\n    },\r\n    {\r\n      \"id\": \"6132498465162\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 1\r\n    },\r\n    {\r\n      \"id\": \"6132498465163\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 0\r\n    },\r\n    {\r\n      \"id\": \"6132498465164\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 1\r\n    },\r\n    {\r\n      \"id\": \"6132498465165\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 0\r\n    },\r\n    {\r\n      \"id\": \"6132498465166\",\r\n      \"user\": \"6844dv543551\",\r\n      \"title\": \"My Title \",\r\n      \"description\": \"Please Wake up\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 1\r\n    }\r\n  ]\r\n\r\n  const [notes, setNotes] = useState(notesintial);\r\n\r\n  const addNote = (title, description, tag) => {\r\n    console.log(\"Adding a new note\")\r\n    const note = {\r\n      \"id\": \"61324984651661\",\r\n      \"user\": \"6844dv5435511\",\r\n      \"title\": \"My Title Edit\",\r\n      \"description\": \"Please Wake up Edit\",\r\n      \"tag\": \"personal\",\r\n      \"date\": \"2021-09-0314\",\r\n      \"__v\": 1\r\n    }\r\n    setNotes(notes.concat(note))\r\n  }\r\n  const deleteNote = (id) => {\r\n    console.log(\"Deleting the note with id\"+ id)\r\n    const newNotes =notes.filter((note)=>{return note.id!==id})\r\n    setNotes(newNotes)\r\n  }\r\n  const editNote = async(tag,description,title,id) => {\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    const json = response.json();\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if(element.id === id){\r\n        element.tag = tag;\r\n        element.description = description;\r\n        element.title = title;\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"]},"metadata":{},"sourceType":"module"}